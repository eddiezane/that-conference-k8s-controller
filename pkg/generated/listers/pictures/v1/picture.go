/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/eddiezane/that-conference-k8s-controller/pkg/apis/pictures/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PictureLister helps list Pictures.
// All objects returned here must be treated as read-only.
type PictureLister interface {
	// List lists all Pictures in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Picture, err error)
	// Pictures returns an object that can list and get Pictures.
	Pictures(namespace string) PictureNamespaceLister
	PictureListerExpansion
}

// pictureLister implements the PictureLister interface.
type pictureLister struct {
	indexer cache.Indexer
}

// NewPictureLister returns a new PictureLister.
func NewPictureLister(indexer cache.Indexer) PictureLister {
	return &pictureLister{indexer: indexer}
}

// List lists all Pictures in the indexer.
func (s *pictureLister) List(selector labels.Selector) (ret []*v1.Picture, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Picture))
	})
	return ret, err
}

// Pictures returns an object that can list and get Pictures.
func (s *pictureLister) Pictures(namespace string) PictureNamespaceLister {
	return pictureNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PictureNamespaceLister helps list and get Pictures.
// All objects returned here must be treated as read-only.
type PictureNamespaceLister interface {
	// List lists all Pictures in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Picture, err error)
	// Get retrieves the Picture from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.Picture, error)
	PictureNamespaceListerExpansion
}

// pictureNamespaceLister implements the PictureNamespaceLister
// interface.
type pictureNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Pictures in the indexer for a given namespace.
func (s pictureNamespaceLister) List(selector labels.Selector) (ret []*v1.Picture, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Picture))
	})
	return ret, err
}

// Get retrieves the Picture from the indexer for a given namespace and name.
func (s pictureNamespaceLister) Get(name string) (*v1.Picture, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("picture"), name)
	}
	return obj.(*v1.Picture), nil
}
